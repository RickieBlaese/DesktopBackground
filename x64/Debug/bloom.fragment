uniform sampler2D sourceTexture;
uniform float sigma;
uniform float glowMultiplier;
uniform float width;
uniform float height;

const int KERNEL_SIZE = 3;
float glow = glowMultiplier / (sigma * sqrt(2.0 * 3.14159));

float blurWeight(float x, float y)
{
    return (glow * exp(-(x*x + y*y) / (2.0 * sigma * sigma)));
}

void main()
{
    vec4 color = vec4(0.0);
    vec2 texCoord = gl_TexCoord[0].xy;

    for (int i = -KERNEL_SIZE; i <= KERNEL_SIZE; i++)
    {
        for (int j = -KERNEL_SIZE; j <= KERNEL_SIZE; j++)
        {
            texCoord.y = gl_TexCoord[0].y + (i / height);
            texCoord.x = gl_TexCoord[0].x + (j / width);
            color += texture2D(sourceTexture, texCoord) * blurWeight(i, j);
        }
    }


    gl_FragColor = color;
}